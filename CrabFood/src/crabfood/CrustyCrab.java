/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package crabfood;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.Timer;

/**
 *
 * @author user
 */
public class CrustyCrab extends javax.swing.JFrame {
    double totalprice ;
    int cookingtime;
    int count ;
    Date d = new Date();
    SimpleDateFormat m = new SimpleDateFormat("yyyy-MM-dd  hh:mm:ss a");
    Calendar cal = Calendar.getInstance();
    

    /**
     * Creates new form CrustyCrab
     */
    public CrustyCrab() {
        showDate();
        showTime();
        initComponents();
    }

    void showDate() {
        // Date d = new Date();
        // SimpleDateFormat s = new SimpleDateFormat("yyyy-MM-dd");
        //  dateLab.setText(s.format(d));
    }

    void showTime() {
        new Timer(0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Date d = new Date();
             //   SimpleDateFormat s = new SimpleDateFormat("hh:mm:ss a");
                //  timeLab.setText(s.format(d));
            }
        }).start();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        l33 = new javax.swing.JCheckBox();
        l20 = new javax.swing.JCheckBox();
        l44 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        CrabbyPatty = new javax.swing.JCheckBox();
        CrabbyMeal = new javax.swing.JCheckBox();
        SailorsSurprise = new javax.swing.JCheckBox();
        PlaceOrder = new javax.swing.JButton();
        PlaceOrderMsg = new javax.swing.JLabel();
        PlaceOrderMsg2 = new javax.swing.JLabel();
        calculatemsg = new javax.swing.JLabel();
        calprice = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 0, 20)); // NOI18N
        jLabel1.setText("Select which branch you would like to order from :");

        l33.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        l33.setText("3 3");
        l33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l33ActionPerformed(evt);
            }
        });

        l20.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        l20.setText("2 0");
        l20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l20ActionPerformed(evt);
            }
        });

        l44.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        l44.setText("4 4");
        l44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l44ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 0, 20)); // NOI18N
        jLabel2.setText("What dish would you like to order?");

        CrabbyPatty.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        CrabbyPatty.setText("Crabby Patty $5.00");
        CrabbyPatty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrabbyPattyActionPerformed(evt);
            }
        });

        CrabbyMeal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        CrabbyMeal.setText("Crabby Meal  $7.50");
        CrabbyMeal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrabbyMealActionPerformed(evt);
            }
        });

        SailorsSurprise.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SailorsSurprise.setText("Sailors Surprise $6.50");
        SailorsSurprise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SailorsSurpriseActionPerformed(evt);
            }
        });

        PlaceOrder.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        PlaceOrder.setText("Place Order");
        PlaceOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlaceOrderActionPerformed(evt);
            }
        });

        PlaceOrderMsg.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        PlaceOrderMsg2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        calculatemsg.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        calculatemsg.setText("   Estimated arrival :");
        calculatemsg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        calprice.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        calprice.setText("   Total price :");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("Calculate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l33)
                    .addComponent(l20)
                    .addComponent(l44)
                    .addComponent(CrabbyPatty)
                    .addComponent(CrabbyMeal)
                    .addComponent(SailorsSurprise)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 521, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(calculatemsg, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(calprice, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PlaceOrder))
                        .addGap(68, 68, 68))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(PlaceOrderMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(PlaceOrderMsg2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(78, 78, 78))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(l20)
                .addGap(7, 7, 7)
                .addComponent(l44)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CrabbyPatty)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CrabbyMeal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SailorsSurprise)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addComponent(PlaceOrder)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(calprice, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(calculatemsg, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PlaceOrderMsg2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PlaceOrderMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(138, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void l33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l33ActionPerformed
        l33.isSelected();
        int distance = 6;
    }//GEN-LAST:event_l33ActionPerformed

    private void PlaceOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlaceOrderActionPerformed
        count++;
        if (CrabbyMeal.isSelected() && SailorsSurprise.isSelected() && CrabbyPatty.isSelected()) {
            PlaceOrderMsg.setText("<html>"+m.format(d)  + ": Customer " + count + " wants to order Crabby Patty,<br>Crabby Meal and Sailors Surprise.</html>");
        } else if (CrabbyMeal.isSelected() && SailorsSurprise.isSelected()) {
            PlaceOrderMsg.setText(m.format(d) + ": Customer " + count + " wants to order Crabby Meal and Sailors Surprise.");
        } else if (CrabbyPatty.isSelected() && SailorsSurprise.isSelected()) {
            PlaceOrderMsg.setText(m.format(d)  + ": Customer " + count + " wants to order Crabby Patty and Sailors Surprise.");
        } else if (CrabbyPatty.isSelected() && CrabbyMeal.isSelected()) {
            PlaceOrderMsg.setText(m.format(d)  + ": Customer " + count + " wants to order Crabby Patty and Crabby Meal.");
        } else if (SailorsSurprise.isSelected()) {
            PlaceOrderMsg.setText(m.format(d) + ": Customer " + count + " wants to order Sailors Surprise.");
        } else if (CrabbyMeal.isSelected()) {
            PlaceOrderMsg.setText(m.format(d)  + ": Customer " + count + " wants to order Crabby Meal.");
        } else if (CrabbyPatty.isSelected()) {
            PlaceOrderMsg.setText(m.format(d)  + ": Customer " + count + " wants to order Crabby Patty.");
        }

        if (l33.isSelected()) {
            PlaceOrderMsg2.setText(m.format(d) + ": Branch of Crusty Crab at (3,3) takes order.");
        }
        if (l20.isSelected()) {
            PlaceOrderMsg2.setText(m.format(d) + ": Branch of Crusty Crab at (2,0) takes order.");
        }
        if (l44.isSelected()) {
            PlaceOrderMsg2.setText(m.format(d) + ": Branch of Crusty Crab at (4,4) takes order.");
        }
        
        //calculating delivery time
        Date dNow = new Date();
     
        if(l33.isSelected()){
            int distance = 6;
            cal.setTime(dNow);
            cal.add(Calendar.MINUTE, 6+cookingtime);
            dNow=cal.getTime();
        calculatemsg.setText("<html> Preparation time : " + cookingtime+" minutes<br>"+
                             " Delivery time: "+distance   +" minutes <br>"+
                             " Estimated arrival: "+dNow      + "</html>");
                                    
        }
        if(l20.isSelected()){
            int distance = 2;
            cal.setTime(dNow);
            cal.add(Calendar.MINUTE, distance+cookingtime);
            dNow=cal.getTime();
        calculatemsg.setText("<html> Preparation time : " + cookingtime+" minutes<br>"+
                             " Delivery time: "+distance   +" minutes <br>"+
                             " Estimated arrival: "+dNow      + "</html>");
                                    
        }
        if(l44.isSelected()){
            int distance = 8;
            cal.setTime(dNow);
            cal.add(Calendar.MINUTE, distance+cookingtime);
            dNow=cal.getTime();
        calculatemsg.setText("<html> Preparation time : " + cookingtime+" minutes<br>"+
                             " Delivery time: "+distance   +" minutes <br>"+
                             " Estimated arrival: "+dNow      + "</html>");
                                    
        }
    }//GEN-LAST:event_PlaceOrderActionPerformed

    private void CrabbyPattyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrabbyPattyActionPerformed
        CrabbyPatty.isSelected();
        cookingtime+=20;
        totalprice += 5.00;
        //PlaceOrderMsg.setText(m.format(d)+s.format(d)+": Customer "+count+": wants to order Crabby Patty\n");           

    }//GEN-LAST:event_CrabbyPattyActionPerformed

    private void CrabbyMealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrabbyMealActionPerformed
        // TODO add your handling code here:
        cookingtime+=20;
        totalprice += 7.50;
    }//GEN-LAST:event_CrabbyMealActionPerformed

    private void SailorsSurpriseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SailorsSurpriseActionPerformed
        // TODO add your handling code here:
        cookingtime+=20;
        totalprice += 6.50;
    }//GEN-LAST:event_SailorsSurpriseActionPerformed

    private void l20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l20ActionPerformed
        int distance = 2;
    }//GEN-LAST:event_l20ActionPerformed

    private void l44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l44ActionPerformed
        int distance = 8;
    }//GEN-LAST:event_l44ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        calprice.setText(" Total price :$ "+totalprice);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrustyCrab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrustyCrab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrustyCrab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrustyCrab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrustyCrab().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CrabbyMeal;
    private javax.swing.JCheckBox CrabbyPatty;
    private javax.swing.JButton PlaceOrder;
    private javax.swing.JLabel PlaceOrderMsg;
    private javax.swing.JLabel PlaceOrderMsg2;
    private javax.swing.JCheckBox SailorsSurprise;
    private javax.swing.JLabel calculatemsg;
    private javax.swing.JLabel calprice;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JCheckBox l20;
    private javax.swing.JCheckBox l33;
    private javax.swing.JCheckBox l44;
    // End of variables declaration//GEN-END:variables
}

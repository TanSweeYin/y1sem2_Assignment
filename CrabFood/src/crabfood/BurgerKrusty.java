/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package crabfood;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

/**
 *
 * @author user
 */
public class BurgerKrusty extends javax.swing.JFrame {
double totalprice;
    int cookingtime;
    Date d = new Date();
    SimpleDateFormat m = new SimpleDateFormat("yyyy-MM-dd  hh:mm:ss a");
    Calendar cal = Calendar.getInstance();
    static Login in = new Login() ;
    /**
     * Creates new form BurgerKrusty
     */
    public BurgerKrusty() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        l14 = new javax.swing.JCheckBox();
        l01 = new javax.swing.JCheckBox();
        l40 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        TheKlogger = new javax.swing.JCheckBox();
        FishSandwich = new javax.swing.JCheckBox();
        TwistyLard = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        calprice = new javax.swing.JLabel();
        calculatemsg = new javax.swing.JLabel();
        placeOrderMsg = new javax.swing.JLabel();
        placeOrderMsg2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 700));

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 0, 20)); // NOI18N
        jLabel1.setText("Select which branch you would like to order from : ");

        l14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        l14.setText("1 4");

        l01.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        l01.setText("0 1");

        l40.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        l40.setText("4 0");

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 0, 20)); // NOI18N
        jLabel2.setText("Select which dish you would like to order :");

        TheKlogger.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TheKlogger.setText("The Klogger     $6.00");
        TheKlogger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TheKloggerActionPerformed(evt);
            }
        });

        FishSandwich.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        FishSandwich.setText("Fish Sandwich   $5.50");
        FishSandwich.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FishSandwichActionPerformed(evt);
            }
        });

        TwistyLard.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TwistyLard.setText("Twisty Lard      $3.50");
        TwistyLard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TwistyLardActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jButton1.setText("Place Order");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jButton2.setText("Calculate");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        calprice.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        calprice.setText("Price : $");

        calculatemsg.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        calculatemsg.setText("Estimated time :");
        calculatemsg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        placeOrderMsg.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        placeOrderMsg.setText("jLabel5");

        placeOrderMsg2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        placeOrderMsg2.setText("jLabel6");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(placeOrderMsg2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(placeOrderMsg, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TwistyLard)
                            .addComponent(l01)
                            .addComponent(l14)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(l40)
                            .addComponent(calculatemsg, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FishSandwich)
                            .addComponent(TheKlogger))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(calprice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(139, 139, 139))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(300, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(calprice, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(110, 110, 110))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l01)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l40)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(TheKlogger)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FishSandwich)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TwistyLard)
                        .addGap(38, 38, 38)
                        .addComponent(calculatemsg, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addComponent(placeOrderMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(placeOrderMsg2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FishSandwichActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FishSandwichActionPerformed
        totalprice += 5.50;
        cookingtime += 20;
    }//GEN-LAST:event_FishSandwichActionPerformed

    private void TwistyLardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TwistyLardActionPerformed
        totalprice +=3.50;
         cookingtime += 20;
    }//GEN-LAST:event_TwistyLardActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        if (TheKlogger.isSelected() && FishSandwich.isSelected() && TwistyLard.isSelected()) 
            placeOrderMsg.setText("<html>" + m.format(d) + ": Customer " + in.getCount() + " wants to order The Klogger,<br>Fish Sandwich and Twisty Lard.</html>");
        else if (TheKlogger.isSelected() && FishSandwich.isSelected() ) 
            placeOrderMsg.setText("<html>" + m.format(d) + ": Customer " + in.getCount() + " wants to order The Klogger and Fish Sandwich.</html>");
        
         else if (TheKlogger.isSelected() && TwistyLard.isSelected()) 
            placeOrderMsg.setText(m.format(d) + ": Customer " + in.getCount() + " wants to order The Klogger and Twisty Lard.");
        else if (FishSandwich.isSelected() && TwistyLard.isSelected()) 
            placeOrderMsg.setText(m.format(d) + ": Customer " + in.getCount()+ " wants to order Fish Sandwich and Twisty Lard.");
        else if (TheKlogger.isSelected() ) 
            placeOrderMsg.setText(m.format(d) + ": Customer " + in.getCount()+ " wants to order The Klogger.");
        else if (TwistyLard.isSelected()) 
            placeOrderMsg.setText(m.format(d) + ": Customer " + in.getCount() + " wants to order Twisty Lard.");
        else if (FishSandwich.isSelected()) 
            placeOrderMsg.setText(m.format(d) + ": Customer " + in.getCount() + " wants to order Fish Sandwich.");
        
        
        if(l14.isSelected())
             placeOrderMsg2.setText(m.format(d) + ": Branch of Crusty Crab at (1,4) takes order.");
        if(l01.isSelected())
             placeOrderMsg2.setText(m.format(d) + ": Branch of Crusty Crab at (0,1) takes order.");
        if(l40.isSelected())
             placeOrderMsg2.setText(m.format(d) + ": Branch of Crusty Crab at (4,0) takes order.");
       
        
        //estimate arrival time
         Date dNow = new Date();
     
        if(l14.isSelected()){
            int distance = 5;
            cal.setTime(dNow);
            cal.add(Calendar.MINUTE, distance+cookingtime);
            dNow=cal.getTime();
        calculatemsg.setText("<html> Preparation time : " + cookingtime+" minutes<br>"+
                             " Delivery time: "+distance   +" minutes <br>"+
                             " Estimated arrival: "+dNow      + "</html>");
                                    
        }
        if(l01.isSelected()){
            int distance =1;
            cal.setTime(dNow);
            cal.add(Calendar.MINUTE, distance+cookingtime);
            dNow=cal.getTime();
        calculatemsg.setText("<html> Preparation time : " + cookingtime+" minutes<br>"+
                             " Delivery time: "+distance   +" minutes <br>"+
                             " Estimated arrival: "+dNow      + "</html>");
                                    
        }
        if(l40.isSelected()){
            int distance = 4;
            cal.setTime(dNow);
            cal.add(Calendar.MINUTE, distance+cookingtime);
            dNow=cal.getTime();
        calculatemsg.setText("<html> Preparation time : " + cookingtime+" minutes<br>"+
                             " Delivery time: "+distance   +" minutes <br>"+
                             " Estimated arrival: "+dNow      + "</html>");
                                    
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        calprice.setText(" $"+totalprice);
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void TheKloggerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TheKloggerActionPerformed
        totalprice += 6.00;
         cookingtime += 20;
    }//GEN-LAST:event_TheKloggerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BurgerKrusty.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BurgerKrusty.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BurgerKrusty.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BurgerKrusty.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BurgerKrusty().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox FishSandwich;
    private javax.swing.JCheckBox TheKlogger;
    private javax.swing.JCheckBox TwistyLard;
    private javax.swing.JLabel calculatemsg;
    private javax.swing.JLabel calprice;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JCheckBox l01;
    private javax.swing.JCheckBox l14;
    private javax.swing.JCheckBox l40;
    private javax.swing.JLabel placeOrderMsg;
    private javax.swing.JLabel placeOrderMsg2;
    // End of variables declaration//GEN-END:variables
}
